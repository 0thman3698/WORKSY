generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                   String            @id @default(uuid())
  name                 String
  email                String            @unique
  password             String
  role                 Role              @default(MEMBER)
  avatar               String?
  isVerified           Boolean           @default(false)
  refreshToken         String?
  resetPasswordToken   String?
  resetPasswordExpires DateTime?
  createdAt            DateTime          @default(now())
  updatedAt            DateTime          @updatedAt
  workspaces           UserOnWorkspace[] //اعضاء
  ownedWorkspaces      Workspace[]       @relation("WorkspaceOwner") // مالك الورك سبيس
  Invite               Invite[]
}

model Workspace {
  id        String            @id @default(uuid())
  name      String
  createdAt DateTime          @default(now())
  updatedAt DateTime          @default(now())
  owner     User              @relation("WorkspaceOwner", fields: [ownerId], references: [id])
  ownerId   String
  members   UserOnWorkspace[]
  Invite    Invite[]
}

model UserOnWorkspace {
  userId      String
  workspaceId String
  role        WorkspaceRole @default(MEMBER)
  user        User          @relation(fields: [userId], references: [id])
  workspace   Workspace     @relation(fields: [workspaceId], references: [id])

  @@id([userId, workspaceId])
}

model Invite {
  id        String   @id @default(uuid())
  email     String
  token     String   @unique
  expiresAt DateTime
  accepted  Boolean  @default(false)

  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String

  invitedBy   User   @relation(fields: [invitedById], references: [id])
  invitedById String
}

enum Role {
  ADMIN
  MEMBER
  GUESt
}

enum WorkspaceRole {
  OWNER
  ADMIN
  MEMBER
}
